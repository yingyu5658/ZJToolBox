"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.desc = exports.replay = exports.match = exports.user = exports.beatmap = void 0;
const set_1 = __importStar(require("../api/v1/routes/beatmap/set"));
const diff_1 = __importStar(require("../api/v1/routes/beatmap/diff"));
const creator_1 = __importStar(require("../api/v1/routes/beatmap/creator"));
const scores_1 = __importStar(require("../api/v1/routes/beatmap/scores"));
exports.beatmap = {
    set: set_1.default,
    diff: diff_1.default,
    creator: creator_1.default,
    scores: scores_1.default
};
const details_1 = __importStar(require("../api/v1/routes/user/details"));
const scores_category_1 = __importStar(require("../api/v1/routes/user/scores-category"));
exports.user = {
    details: details_1.default,
    scores: {
        category: scores_category_1.default,
    }
};
const match_1 = __importStar(require("../api/v1/routes/match"));
exports.match = match_1.default;
/**
 * @deprecated
 */
const replay = () => {
    return 'USE API V2';
};
exports.replay = replay;
exports.desc = {
    beatmap_set: set_1.description,
    beatmap_diff: diff_1.description,
    beatmap_creator: creator_1.description,
    beatmap_scores: scores_1.description,
    user_details: details_1.description,
    user_scores_category: scores_category_1.description,
    match: match_1.description,
};
