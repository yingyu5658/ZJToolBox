import { IDefaultParams, IError } from "../../types";
import { ChangelogsListAllResponse } from "../../types/v2/changelogs_list_all";
import { ChangelogsListLookupResponse } from "../../types/v2/changelogs_list_lookup";
type params = ({
    type: 'all';
    from_build?: string;
    to_build?: string;
    stream_name?: 'stable40' | 'beta40' | 'cuttingedge' | 'lazer' | 'web';
    max_id?: string;
    message_formats?: ('html' | 'markdown')[];
} | {
    type: 'lookup';
    message_formats: ('html' | 'markdown')[];
    changelog: 'stable40' | 'beta40' | 'cuttingedge' | 'lazer' | 'web';
    key: string;
});
type Response<T extends params['type']> = T extends 'all' ? ChangelogsListAllResponse & IError : T extends 'lookup' ? ChangelogsListLookupResponse & IError : IError;
export declare const changelogs_list: <T extends params>(params: T, addons?: IDefaultParams) => Promise<Response<T["type"]>>;
export {};
