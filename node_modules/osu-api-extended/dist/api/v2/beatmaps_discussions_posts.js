"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.beatmaps_discussions_posts = void 0;
const handleErrors_1 = require("../../utility/handleErrors");
const request_1 = require("../../utility/request");
const beatmaps_discussions_posts = (params, addons) => __awaiter(void 0, void 0, void 0, function* () {
    if (params === null || params === void 0 ? void 0 : params.discussion_id) {
        // @ts-ignore
        params.beatmapset_discussion_id = params.discussion_id;
        delete params.discussion_id;
    }
    ;
    if (Array.isArray(params === null || params === void 0 ? void 0 : params.types)) {
        // @ts-ignore
        params['types[]'] = params.types;
        delete params.types;
    }
    ;
    const data = yield (0, request_1.request)(`https://osu.ppy.sh/api/v2/beatmapsets/discussions/posts`, {
        method: 'GET',
        params,
        addons
    });
    if (data.error)
        return (0, handleErrors_1.handleErrors)(new Error(data.error));
    return data;
});
exports.beatmaps_discussions_posts = beatmaps_discussions_posts;
